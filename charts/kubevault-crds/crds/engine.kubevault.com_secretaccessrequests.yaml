apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubevault
  name: secretaccessrequests.engine.kubevault.com
spec:
  group: engine.kubevault.com
  names:
    categories:
    - vault
    - appscode
    - all
    kind: SecretAccessRequest
    listKind: SecretAccessRequestList
    plural: secretaccessrequests
    singular: secretaccessrequest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretAccessRequestSpec contains information to request for
              database credential
            properties:
              aws:
                description: https://www.vaultproject.io/api/secret/aws/index.html#parameters-6
                  AWSAccessKeyRequestSpec contains information to request for vault
                  aws credential
                properties:
                  roleARN:
                    description: The ARN of the role to assume if credential_type
                      on the Vault role is assumed_role. Must match one of the allowed
                      role ARNs in the Vault role. Optional if the Vault role only
                      allows a single AWS role ARN; required otherwise.
                    type: string
                  useSTS:
                    description: If true, '/aws/sts' endpoint will be used to retrieve
                      credential Otherwise, '/aws/creds' endpoint will be used to
                      retrieve credential
                    type: boolean
                type: object
              gcp:
                description: GCPAccessRequestConfiguration contains information to
                  request for vault gcp credentials
                properties:
                  keyAlgorithm:
                    description: 'Specifies the algorithm used to generate key. Defaults
                      to 2k RSA key. Accepted values: KEY_ALG_UNSPECIFIED, KEY_ALG_RSA_1024,
                      KEY_ALG_RSA_2048'
                    type: string
                  keyType:
                    description: 'Specifies the private key type to generate. Defaults
                      to JSON credentials file Accepted values: TYPE_UNSPECIFIED,
                      TYPE_PKCS12_FILE, TYPE_GOOGLE_CREDENTIALS_FILE'
                    type: string
                type: object
              roleRef:
                description: Contains vault database role info
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in
                      the core API group. For any other third-party types, APIGroup
                      is required.
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - kind
                - name
                type: object
              subjects:
                items:
                  description: Subject contains a reference to the object or user
                    identities a role binding applies to.  This can either hold a
                    direct API object reference, or a value for non-objects such as
                    user and group names.
                  properties:
                    apiGroup:
                      description: APIGroup holds the API group of the referenced
                        subject. Defaults to "" for ServiceAccount subjects. Defaults
                        to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: Kind of object being referenced. Values defined
                        by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the
                        Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: Namespace of the referenced object.  If the object
                        kind is non-namespace, such as "User" or "Group", and this
                        value is not empty the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
              ttl:
                description: Specifies the TTL for the leases associated with this
                  role. Accepts time suffixed strings ("1h") or an integer number
                  of seconds. Defaults to roles default TTL time
                type: string
            required:
            - roleRef
            - subjects
            type: object
          status:
            properties:
              conditions:
                description: Conditions applied to the request, such as approval or
                  denial.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lease:
                description: Contains lease info
                properties:
                  duration:
                    description: lease duration
                    type: string
                  id:
                    description: lease id
                    type: string
                  renewable:
                    description: Specifies whether this lease is renewable
                    type: boolean
                type: object
              observedGeneration:
                description: observedGeneration is the most recent generation observed
                  for this resource. It corresponds to the resource's generation,
                  which is updated on mutation by the API Server.
                format: int64
                type: integer
              phase:
                description: Specifies the phase of SecretAccessRequest object
                type: string
              secret:
                description: Name of the secret containing secret engine role credentials
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                required:
                - name
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
