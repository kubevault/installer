{{- if .Values.apiserver.enableValidatingWebhook }}
{{- $caCrt := dig "data" "ca.crt" "unknown" (lookup "v1" "ConfigMap" .Release.Namespace "kube-root-ca.crt") | b64enc }}

apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubevault.com
  labels:
    {{- include "kubevault-operator.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: vaultserverwebhook.validators.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubevault.com/v1alpha1/vaultserverwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - operations:
    - CREATE
    - UPDATE
    - DELETE
    apiGroups:
    - kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultservers
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.engine.kubevault.com
  labels:
    {{- include "kubevault-operator.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: secretaccessrequestwebhook.validators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.engine.kubevault.com/v1alpha1/secretaccessrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - engine.kubevault.com
    apiVersions:
    - "*"
    resources:
    - secretaccessrequests
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
{{ end }}
