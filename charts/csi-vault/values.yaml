# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

attacher:
  name: attacher
  registry: quay.io/k8scsi
  repository: csi-attacher
  tag: v1.2.0
  pullPolicy: IfNotPresent
  resources: {}
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
plugin:
  name: plugin
  registry: kubevault
  repository: csi-vault
  tag: v0.3.0
  pullPolicy: IfNotPresent
  resources: {}
  securityContext:
    privileged: true
    capabilities:
      add: ["SYS_ADMIN"]
    allowPrivilegeEscalation: true
provisioner:
  name: provisioner
  registry: quay.io/k8scsi
  repository: csi-provisioner
  tag: v1.3.0
  pullPolicy: IfNotPresent
  resources: {}
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
nodeRegistrar:
  name: node-registrar
  registry: quay.io/k8scsi
  repository: csi-node-driver-registrar
  tag: v1.1.0
  pullPolicy: IfNotPresent
  resources: {}
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

components:
  controller: controller
  node: node

logLevel: 3

## Annotations passed to operator pod(s).
##
annotations: {}

driverName: secrets.csi.kubevault.com
pluginAddress: /csi/csi.sock
pluginDir: /csi

## Optionally specify an array of imagePullSecrets.
## Secrets must be manually created in the namespace.
## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
## example: helm template charts/csi-vault \
##            --set imagePullSecrets[0]=abc \
##            --set imagePullSecrets[1]=xyz
imagePullSecrets: []

## Installs pods as critical addon
## https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
criticalAddon: true

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector:
  beta.kubernetes.io/os: linux
  beta.kubernetes.io/arch: amd64

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Install Default RBAC roles and bindings
rbac:
  # Specifies whether RBAC resources should be created
  create: true

podSecurityContext: {}
  # fsGroup: 2000

apiserver:
  # If true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.com/Azure/AKS/issues/522 (default true)
  useKubeapiserverFqdnForAks: true
  # healthcheck configures the readiness and liveliness probes for the operator pod.
  healthcheck:
    enabled: true

# Send usage events to Google Analytics
enableAnalytics: true

monitoring:
  # specify monitoring agent (either "prometheus.io/builtin" or "prometheus.io/coreos-operator")
  agent: "none"
  # specify whether to monitor Vault CSI driver node plugin
  node: false
  # specify whether to monitor Vault CSI driver controller plugin
  controller: false
  # specify where ServiceMonitor crd will be created
  prometheus:
    namespace: ""
  serviceMonitor:
    labels: {}
