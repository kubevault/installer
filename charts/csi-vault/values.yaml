# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Overrides name template
nameOverride: ""
# Overrides fullname template
fullnameOverride: ""
attacher:
  # Name of the attacher container
  name: attacher
  # Docker registry used to pull CSI attacher image
  registry: quay.io/k8scsi
  # CSI attacher container image
  repository: csi-attacher
  # CSI attacher container image tag
  tag: v1.2.0
  # CSI attacher container image pull policy
  pullPolicy: IfNotPresent
  # Compute Resources required by the CSI attacher container
  resources: {}
  # Security options the CSI attacher container should run with
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
plugin:
  # Name of the CSI driver container
  name: plugin
  # Docker registry used to pull CSI driver image
  registry: kubevault
  # CSI driver container image
  repository: csi-vault
  # CSI driver container image tag
  tag: v0.3.0
  # CSI driver container image pull policy
  pullPolicy: IfNotPresent
  # Compute Resources required by the CSI driver container
  resources: {}
  # Security options the CSI driver container should run with
  securityContext: # +doc-gen:break
    privileged: true
    capabilities:
      add: ["SYS_ADMIN"]
    allowPrivilegeEscalation: true
provisioner:
  # Name of the provisioner container
  name: provisioner
  # Docker registry used to pull CSI provisioner image
  registry: quay.io/k8scsi
  # CSI provisioner container image
  repository: csi-provisioner
  # CSI provisioner container image tag
  tag: v1.3.0
  # CSI provisioner container image pull policy
  pullPolicy: IfNotPresent
  # Compute Resources required by the CSI provisioner container
  resources: {}
  # Security options the CSI provisioner container should run with
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
nodeRegistrar:
  # Name of the CSI driver node registrar container
  name: node-registrar
  # Docker registry used to pull CSI driver node registrar image
  registry: quay.io/k8scsi
  # CSI driver node registrar container image
  repository: csi-node-driver-registrar
  # CSI driver node registrar container image tag
  tag: v1.1.0
  # CSI driver node registrar container image pull policy
  pullPolicy: IfNotPresent
  # Compute Resources required by the CSI driver node registrar container
  resources: {}
  # Security options the CSI driver node registrar container should run with
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
# Vault CSI driver name
driverName: secrets.csi.kubevault.com
# Vault CSI driver endpoint address
pluginAddress: /csi/csi.sock
# Vault CSI driver plugin directory
pluginDir: /csi
components:
  # Name of controller driver component
  controller: controller
  # Name of node driver component
  node: node
# Specify an array of imagePullSecrets.
# Secrets must be manually created in the namespace.
#
# Example:
# helm template charts/csi-vault \
#   --set imagePullSecrets[0].name=sec0 \
#   --set imagePullSecrets[1].name=sec1
imagePullSecrets: []
# If true, installs CSI driver as critical addon
criticalAddon: false
# Log level for operator
logLevel: 3
# Annotations applied to CSI driver deployment
annotations: {}
# Annotations passed to CSI driver pod(s).
podAnnotations: {}
# Node labels for pod assignment
nodeSelector: # +doc-gen:break
  beta.kubernetes.io/os: linux
  beta.kubernetes.io/arch: amd64
# Tolerations for pod assignment
tolerations: []
# Affinity rules for pod assignment
affinity: {}
rbac:
  # Specifies whether RBAC resources should be created
  create: true
# Security options the CSI driver pod should run with.
podSecurityContext: {}
# fsGroup: 2000

apiserver:
  # If true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.com/Azure/AKS/issues/522 (default true)
  useKubeapiserverFqdnForAks: true
  healthcheck:
    # healthcheck configures the readiness and liveliness probes for the CSI driver pod.
    enabled: true
# If true, sends usage analytics
enableAnalytics: true
monitoring:
  # Name of monitoring agent (either "prometheus.io/operator" or "prometheus.io/builtin")
  agent: "none"
  # Specify whether to monitor Vault CSI driver node plugin
  node: false
  # Specify whether to monitor Vault CSI driver controller plugin
  controller: false
  prometheus:
    # Specify the namespace where Prometheus server is running or will be deployed.
    namespace: ""
  serviceMonitor:
    # Specify the labels for ServiceMonitor.
    # Prometheus crd will select ServiceMonitor using these labels.
    # Only usable when monitoring agent is `prometheus.io/operator`.
    labels: {}
