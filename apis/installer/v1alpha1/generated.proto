/*
Copyright The KubeVault Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package kubevault.dev.installer.apis.installer.v1alpha1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

message Container {
  optional ImageRef imageRef = 1;

  // Compute Resources required by the sidecar container.
  // +optional
  optional k8s.io.api.core.v1.ResourceRequirements resources = 2;

  // Security options the pod should run with.
  // +optional
  optional k8s.io.api.core.v1.SecurityContext securityContext = 3;
}

message HealthcheckSpec {
  // +optional
  optional bool enabled = 1;
}

message ImageRef {
  optional string registry = 1;

  optional string repository = 2;

  optional string tag = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=kubevaultoperators,singular=kubevaultoperator,categories={kubevault,appscode}
message KubeVaultOperator {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional KubeVaultOperatorSpec spec = 2;
}

// KubeVaultOperatorList is a list of KubeVaultOperators
message KubeVaultOperatorList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of KubeVaultOperator CRD objects
  repeated KubeVaultOperator items = 2;
}

// KubeVaultOperatorSpec is the schema for KubeVault operator values file
message KubeVaultOperatorSpec {
  // +optional
  optional string nameOverride = 1;

  // +optional
  optional string fullnameOverride = 2;

  optional int32 replicaCount = 3;

  optional Container operator = 4;

  optional ImageRef cleaner = 5;

  optional string imagePullPolicy = 6;

  // +optional
  repeated string imagePullSecrets = 7;

  // +optional
  optional bool criticalAddon = 8;

  // +optional
  optional int32 logLevel = 9;

  // +optional
  map<string, string> annotations = 10;

  // +optional
  map<string, string> nodeSelector = 11;

  // If specified, the pod's tolerations.
  // +optional
  repeated k8s.io.api.core.v1.Toleration tolerations = 12;

  // If specified, the pod's scheduling constraints
  // +optional
  optional k8s.io.api.core.v1.Affinity affinity = 13;

  // PodSecurityContext holds pod-level security attributes and common container settings.
  // Optional: Defaults to empty.  See type description for default values of each field.
  // +optional
  optional k8s.io.api.core.v1.PodSecurityContext podSecurityContext = 14;

  optional ServiceAccountSpec serviceAccount = 15;

  optional WebHookSpec apiserver = 16;

  // +optional
  optional bool enableAnalytics = 17;

  optional Monitoring monitoring = 18;

  // +optional
  optional string clusterName = 19;
}

message Monitoring {
  optional string agent = 1;

  // +optional
  optional bool operator = 2;

  optional PrometheusSpec prometheus = 3;

  optional ServiceMonitorLabels serviceMonitor = 4;
}

message PrometheusSpec {
  // +optional
  optional string namespace = 1;
}

message ServiceAccountSpec {
  optional bool create = 1;

  // +optional
  optional string name = 2;

  // +optional
  map<string, string> annotations = 3;
}

message ServiceMonitorLabels {
  // +optional
  map<string, string> labels = 1;
}

message ServingCerts {
  optional bool generate = 1;

  // +optional
  optional string caCrt = 2;

  // +optional
  optional string serverCrt = 3;

  // +optional
  optional string serverKey = 4;
}

message WebHookSpec {
  optional int32 groupPriorityMinimum = 1;

  optional int32 versionPriority = 2;

  optional bool enableMutatingWebhook = 3;

  optional bool enableValidatingWebhook = 4;

  optional string ca = 5;

  // +optional
  optional bool bypassValidatingWebhookXray = 6;

  optional bool useKubeapiserverFqdnForAks = 7;

  optional HealthcheckSpec healthcheck = 8;

  optional ServingCerts servingCerts = 9;
}

